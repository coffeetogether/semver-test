name: Release and get the version

on:
  push:
    branches:
      - main
      - develop

jobs:
  release:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions: write-all
    steps:
      - name: Checkout code
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
        with:
          fetch-depth: 0

      - name: Release based on branch
        uses: mehdi-ra/main-develop-semver@v1.6.0
        id: release
        with:
          token: ${{secrets.GITHUB_TOKEN}}
          releaseTitle: Auto release

      - name: Extract branch name
        run: echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >>$GITHUB_OUTPUT
        id: extract_branch

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: devopshobbies/kaiser-biolerplate
          tags: type=raw,value=${{ steps.release.outputs.releaseVersion }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.KAISER_DOCKERHUB_USERNAME }}
          password: ${{ secrets.KAISER_DOCKERHUB_TOKEN }}

      - name: Build and publish latest
        uses: docker/build-push-action@v4
        if: steps.extract_branch.outputs.branch == 'main' && steps.release.outputs.releaseVersion != ''
        with:
          push: true
          tags: me0dira/${{ github.event.repository.name }}:latest

      - name: Build and publish pre release
        uses: docker/build-push-action@v4
        if: steps.extract_branch.outputs.branch == 'develop' && steps.release.outputs.releaseVersion != ''
        with:
          push: true
          tags: me0dira/${{ github.event.repository.name }}:${{steps.release.outputs.releaseVersion}}

      - name: Build and publish pre release
        uses: docker/build-push-action@v4
        if: steps.release.outputs.releaseVersion == ''
        with:
          push: true
          tags: me0dira/${{ github.event.repository.name }}:latest

  npm-publish:
    runs-on: ubuntu-latest
    needs: release

    steps:
      - uses: actions/checkout@v3
      - name: Get latest tag
        id: latestTag
        continue-on-error: true
        uses: oprypin/find-latest-tag@e1e0e606cc7e9ede25140a5a139b3a5a1b717ece
        with:
          releases-only: true
          repository: ${{ github.repository }}
          token: ${{secrets.GITHUB_TOKEN}}

      - uses: actions/setup-node@v3
        with:
          registry-url: registry-url-here

      - name: Get latest version
        id: validVersion
        run: echo "publishVersion=$(echo ${{ steps.latestTag.outputs.tag }} | sed 's/^v//')" >> $GITHUB_OUTPUT

      - uses: matt-usurp/npm-publish@v2
        with:
          version: ${"${{steps.validVersion.outputs.tag}}"#v}
          tag: "next"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
